@page "/addperson"
@using MyMDb.Shared.CreateModel
@inject HttpClient Http

<PageTitle>Add a Person</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true" >Add a new person to the database</MudText>

<MudPaper Class="pa-4" Elevation="10">
    <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors" >
        <MudGrid Spacing="1">
            <MudItem xs="7" >
                <MudTextField Label="Full Name" @bind-Value="FullName" Margin="Margin.Dense" Variant="Variant.Outlined"
                    Required="true" RequiredError="Full Name is required" />

                <MudDatePicker @ref="datePicker" Label="Birthdate" @bind-Date="Birthdate" PickerVariant="PickerVariant.Dialog" Editable="true" AutoClose="true"
                    Mask=@(new DateMask("yyyy-MM-dd")) DateFormat="yyyy-MM-dd" Margin="Margin.Dense" Variant="Variant.Outlined"
                    Required="true" RequiredError="Birthdate is required" />

                <MudTextField Label="Birthplace" @bind-Value="Birthplace" Margin="Margin.Dense" Variant="Variant.Outlined"
                    Required="true" RequiredError="Birthplace is required" />

            </MudItem>

            <MudItem xs="5" >
                @foreach (var error in errors)
                {
                    <MudText Color="@Color.Error">@error</MudText>
                }
            </MudItem>

            <MudItem xs="12" >
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Submit">Submit</MudButton>
            </MudItem>

        </MudGrid>
    </MudForm>
</MudPaper>

@code {
    bool success;
    string[] errors = { };
    MudForm? form;
    MudDatePicker? datePicker;

    public string FullName { get; set; }
    public DateTime? Birthdate { get; set; }
    public string Birthplace { get; set; }

    public async void Submit()
    {
        await form.Validate();
        if (form.IsValid)
        {
            var person = new CreatePerson
            {
                FullName = this.FullName,
                Birthdate = this.Birthdate?.ToString("yyyy-MM-dd"),
                Birthplace = this.Birthplace
            };

            var result = await Http.PostAsJsonAsync<CreatePerson>("api/person", person);

            if (result.IsSuccessStatusCode)
            {
                form.Reset();
                datePicker.Reset();
            }
        }
    }
}
