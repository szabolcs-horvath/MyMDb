@using MyMDb.Shared.SearchModel
@inject HttpClient Http

<MudTextField @bind-Value="@searchTerm" Placeholder="Search for a Movie, Show or Person" OnAdornmentClick="GetResults" OnKeyPress="Submit"
    Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" />

@if (searching)
{
    <MudProgressLinear @ref="progress" Color="Color.Primary" Indeterminate="true" />
}
else
{
    <MudList Clickable="true" >
        @foreach (SearchMovie movie in movieResults)
        {
            <MudListItem Text="@movie.Title" Icon="@Icons.TwoTone.Movie" IconColor="@Color.Primary" IconSize="Size.Large" />
        }

        @foreach (SearchPerson person in personResults)
        {
            <MudListItem Text="@person.FullName" Icon="@Icons.TwoTone.Person" IconColor="@Color.Primary" IconSize="Size.Large" />
        }
    </MudList>
}

@code {
    private bool searching = false;
    private MudProgressLinear? progress;

    private string? searchTerm = string.Empty;
    private List<SearchMovie> movieResults = new List<SearchMovie>();
    private List<SearchPerson> personResults = new List<SearchPerson>();

    private async Task GetResults()
    {
        if (!string.IsNullOrEmpty(searchTerm))
        {
            searching = true;
            movieResults = new List<SearchMovie>();
            personResults = new List<SearchPerson>();
            StateHasChanged();

            var moviesTask = Http.GetFromJsonAsync<SearchMovie[]>($"api/movie/search?title={searchTerm}");
            var peopleTask = Http.GetFromJsonAsync<SearchPerson[]>($"api/person/search?name={searchTerm}");
            await Task.WhenAll(moviesTask, peopleTask);

            var movies = await moviesTask;
            var people = await peopleTask;

            if (movies?.Length > 0)
            {
                movieResults = new List<SearchMovie>(movies);
            } 

            if (people?.Length > 0)
            {
                personResults = new List<SearchPerson>(people);
            } 

            searching = false;
            StateHasChanged();
        }
    }

    private async Task Submit(KeyboardEventArgs args) {
        if (args.Code == "Enter")
        {
            searching = true;
            await GetResults();
            StateHasChanged();
        }
    }
}
